<Window x:Class="PopupApp.MainWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:local="clr-namespace:PopupApp"
                  mc:Ignorable="d"
                  Title="MainWindow" 
                  Height="1450" 
                  Width="1800"
                  WindowStartupLocation="CenterScreen" 
        ResizeMode="CanResizeWithGrip" 
                  WindowStyle="None" 
                  AllowsTransparency="True" 
                  Background="Transparent" >
    <Window.Resources>
        <!--#region Button Visual Style-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
      <!--#endregion-->
        <!--region Home Button Style-->
        <Style x:Key="HomeButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region Profile Button Style-->
        <Style x:Key="ProfileButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region Settings Button Style-->
        <Style x:Key="SettingsButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property ="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
       <!--#endregion-->
        <!--#region Close Button Style-->
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        
        
    </Window.Resources>
    <Grid>
        <Grid Margin=" 20" Background=" #1c2f3e">
            <Grid.Effect>
                <DropShadowEffect BlurRadius="30"
                                                     ShadowDepth="2"
                                                     Direction=" -90"
                                                     Color="Gray" >
                </DropShadowEffect>
            </Grid.Effect>
            <StackPanel Width=" 100" HorizontalAlignment="Left"  Background="#14212B">
                <Button Style="{DynamicResource HomeButtonStyle}" x:Name="Home"
                                Height="100"
                                Background="Transparent" 
                                BorderBrush="Transparent"
                                Margin="0,180,0,20" MouseEnter="Home_MouseEnter" MouseLeave="Home_MouseLeave">
                    <Image  Source="Assets/home_icon.png"
                                    Stretch="None" >
                    </Image>
                </Button>
                <Button Style="{DynamicResource ProfileButtonStyle}" x:Name="Profile"
                                Height="100"
                                Background="Transparent" 
                                BorderBrush="Transparent"
                                Margin="0,0,0,10" MouseEnter="Profile_MouseEnter" MouseLeave="Profile_MouseLeave">
                    <Image Source="Assets/profile_icon.png"
                                  Stretch="None" >
                    </Image>
                </Button>
                <Button Style="{DynamicResource SettingsButtonStyle}" x:Name="Settings"
                                Height="100"
                                Background="Transparent" 
                                BorderBrush="Transparent"
                                Margin="0,10,0,0" MouseEnter="Settings_MouseEnter" MouseLeave="Settings_MouseLeave">
                    <Image Source="Assets/settings_icon.png"
                                  Stretch="None" >
                    </Image>
                </Button>
            </StackPanel>
            <Grid Background="AliceBlue" Margin="130,110,30,110">
                
            </Grid>
            <Grid Height=" 80" VerticalAlignment="Top"  Background=" #233C4F">
                <TextBlock Text="C# Design Pro" 
                                     FontFamily="open sans condensed"
                                     FontSize="28"
                                     VerticalAlignment="Center" 
                                     HorizontalAlignment="Center" 
                                     Foreground  =" #E0FFFF">
                </TextBlock>
                <Button Style="{DynamicResource CloseButtonStyle}" x:Name="ExitButton"
                                Height= "40"
                                Width="40"
                                Background="Transparent" 
                                BorderThickness=" 0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                Margin=" 0,0,20,0" Click="ExitButton_Click">
                    <Image Source="Assets/close_icon.png"
                                  Stretch="None" >
                    </Image>
                </Button>
            </Grid>
            <Grid Height=" 80"
                       VerticalAlignment="Bottom" 
                       Background="#233C3F">
            </Grid>
            <!--add the popup user control-->
            <Popup x:Name="popup_uc"
                            AllowsTransparency="True"
                            HorizontalOffset=" 10"
                            VerticalOffset="10">
                <Grid>
                    <local:PopupUserControl x:Name="Header" Foreground="#E0FFFF"/>
                    
                </Grid>
            </Popup>
        </Grid>
    </Grid>
</Window>
