//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Live
{
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    
    public partial class Strain : INotifyPropertyChanged
    {
        public Strain()
        {
            this.WeedSales = new ObservableCollection<WeedSale>();
        }
    
        private int _Id;
        public int Id
        {
            get { return _Id; }
            set
            {
                if (_Id != value)
                {
                    _Id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private string _Name;
        public string Name
        {
            get { return _Name; }
            set
            {
                if (_Name != value)
                {
                    _Name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _IsAuto;
        public string IsAuto
        {
            get { return _IsAuto; }
            set
            {
                if (_IsAuto != value)
                {
                    _IsAuto = value;
                    OnPropertyChanged("IsAuto");
                }
            }
        }
    
        private ObservableCollection<WeedSale> _WeedSales;
        public ObservableCollection<WeedSale> WeedSales
        {
            get { return _WeedSales; }
            set
            {
                if (_WeedSales != value)
                {
                    _WeedSales = value;
                    OnPropertyChanged("WeedSales");
                }
            }
        }
    
        #region INotifyPropertyChanged Members
        public event PropertyChangedEventHandler PropertyChanged;
    
        protected void OnPropertyChanged(string propertyName)
        {
            OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
        }
    
        protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
        {
            if (PropertyChanged != null)
                PropertyChanged(this, e);
        }
        #endregion
    }
}
